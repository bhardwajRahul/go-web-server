# Caddyfile for Go Web Server
# Replace example.com with your actual domain

# For local development
localhost, localhost:80, localhost:443 {
	# Reverse proxy to Go app
	reverse_proxy app:8080 {
		# Health check
		health_uri /health
		health_interval 30s
		health_timeout 10s
		
		# Load balancing
		lb_policy round_robin
	}

	# Enable compression
	encode gzip zstd

	# Security headers (additional to Go app's built-in headers)
	header {
		# Remove server info
		-Server
		
		# Additional security headers
		Permissions-Policy "geolocation=(), microphone=(), camera=()"
		Referrer-Policy "strict-origin-when-cross-origin"
	}

	# Logging
	log {
		output stdout
		format console
		level INFO
	}
}

# Production domain configuration
go.dunamismax.com {
	# Automatic HTTPS with Let's Encrypt
	tls {
		protocols tls1.2 tls1.3
	}

	# Reverse proxy to Go app
	reverse_proxy app:8080 {
		# Health check
		health_uri /health
		health_interval 30s
		health_timeout 10s
		
		# Load balancing
		lb_policy round_robin
	}

	# Enable compression
	encode gzip zstd

	# Security headers (additional to Go app's built-in headers)
	header {
		# Remove server info
		-Server
		
		# Additional security headers
		Permissions-Policy "geolocation=(), microphone=(), camera=()"
		Referrer-Policy "strict-origin-when-cross-origin"
		
		# HSTS (Strict Transport Security)
		Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
	}

	# Logging
	log {
		output stdout
		format console
		level INFO
	}
}

# Prometheus Metrics Domain
metrics.dunamismax.com {
	# Automatic HTTPS with Let's Encrypt
	tls {
		protocols tls1.2 tls1.3
	}

	# Redirect root to /metrics
	handle / {
		redir /metrics permanent
	}

	# Handle metrics path specifically
	handle /metrics {
		reverse_proxy app:8080 {
			# Health check on main health endpoint
			health_uri /health
			health_interval 30s
			health_timeout 10s
			
			# Load balancing
			lb_policy round_robin
		}
		
		# Metrics-specific headers
		header {
			# Remove server info
			-Server
			
			# Add metrics-specific headers
			Cache-Control "no-cache, no-store, must-revalidate"
			Content-Type "text/plain; version=0.0.4; charset=utf-8"
		}
	}

	# Security headers for other paths
	header {
		# Remove server info
		-Server
		
		# Additional security headers
		Permissions-Policy "geolocation=(), microphone=(), camera=()"
		Referrer-Policy "strict-origin-when-cross-origin"
		
		# HSTS (Strict Transport Security)
		Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
	}

	# Logging
	log {
		output stdout
		format console
		level INFO
	}
}